---
ID: "bcbbcebd-af62-5517-a603-2d23f5e3cb3c"
Parent: "3934dc4c-9598-5ae2-892f-ec43a046ade2"
Template: "04646a89-996f-4ee7-878a-ffdbf1f0ef0d"
Path: "/sitecore/layout/Renderings/Project/sitecore-jss-app/GraphQL-IntegratedDemo"
DB: master
SharedFields:
- ID: "037fe404-dd19-4bf7-8e30-4dadf68b27b0"
  Hint: componentName
  Value: "GraphQL-IntegratedDemo"
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/16x16/graph_connection_directed.png
- ID: "17bb046a-a32a-41b3-8315-81217947611b"
  Hint: ComponentQuery
  Value: |
    # This file contains a GraphQL query that will be executed and the result provided to
    # your JSS component. You can run this query in GraphiQL ($endpoint/ui) for a nice editing experience.
    
    # Note that we're executing _two queries_ (datasource and contextItem)
    # within the context of the IntegratedDemoQuery _operation_. This makes it
    # very efficient at gathering data from multiple sources.
    
    query IntegratedDemoQuery($datasource: String!, $contextItem: String!, $language: String!) {
      # Datasource query
      # $datasource will always be set to the ID of the rendering's datasource item
      # (as long as the GraphQLData helper is used)
      datasource: item(path: $datasource, language: $language) {
        id
        name
        # Strongly-typed querying on known templates is possible!
        ...on GraphQLIntegratedDemo {
          # Single-line text field
          sample1 {
            # the 'jsonValue' field is a JSON blob that represents the object that
            # should be passed to JSS field rendering helpers (i.e. text, image, link)
            jsonValue
            value
          }
          # General Link field
          sample2 {
            jsonValue
            # Structured querying of the field's values is possible
            text
            target
            url
            # Access to the template definition is possible
            definition {
              type
              shared
            }
          }
        }
      }
    
      # Context/route item query
      # $contextItem will always be set to the ID of the current context item (the route item)
      # (as long as the GraphQLData helper is used)
      contextItem: item(path: $contextItem, language: $language) {
        id
        # Get the page title from the app route template
        ...on AppRoute {
          pageTitle {
            value
          }
        }
    
        # List the children of the current route
        children(hasLayout: true) {
          results {
            id
            # typing fragments can be used anywhere!
            # so in this case, we're grabbing the 'pageTitle'
            # field on all child route items.
            ...on AppRoute {
              pageTitle {
                jsonValue
                value
              }
            }
            url{
              path
            }
          }
        }
      }
    }
    
- ID: "1a7c85e5-dc0b-490d-9187-bb1dbcb4c72f"
  Hint: Datasource Template
  Value: "/sitecore/templates/Project/sitecore-jss-app/GraphQL-IntegratedDemo"
- ID: "9c6106ea-7a5a-48e2-8cad-f0f693b1e2d4"
  Hint: __Read Only
  Type: Checkbox
  Value: 1
- ID: "a77e8568-1ab3-44f1-a664-b7c37ec7810d"
  Hint: Parameters Template
  Value: "{7D7CA834-AF9B-5932-884F-A141BAB8D1FC}"
- ID: "b5b27af1-25ef-405c-87ce-369b3a004016"
  Hint: Datasource Location
  Value: "./Page Components|/sitecore/content/sitecore-jss-app/Components/GraphQL-IntegratedDemo"
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20240102T083617Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\JssImport
